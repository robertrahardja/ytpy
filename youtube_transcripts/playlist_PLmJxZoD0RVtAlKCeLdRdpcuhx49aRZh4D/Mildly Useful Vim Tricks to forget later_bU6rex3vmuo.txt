Title: Mildly Useful Vim Tricks to forget later
Video ID: bU6rex3vmuo
URL: https://www.youtube.com/watch?v=bU6rex3vmuo

These are some Vim commands I wish I
knew sooner. Feel free to skip around
because probably there'll be some that
you know. So, the first one is high,
medium, and low is the way I like to
think of them. Let me turn on keycasting
real quick. Some of you have asked what
thing I use for that. It's called
Keycaster. Um I think it's on all
platforms. So, high, medium, and low,
capital H, M, and L. If I type um
capital H, it'll take me to the high
point of the document, which is
determined based on some kind of math.
Um, if I go to zen mode, it's based on
some kind of a line number thing. Um, so
high will take me there, M will take me
there, L will take me there. I don't use
these all that often because it's a
little bit unpredictable in my
experience, like exactly where on screen
you'll end up, especially if you have
like scroll off enabled to a certain
amount. But if you generally know you
want to go to the high point of the
screen, the medium point, uh it's not a
huge jump, but if I were to zoom like
way out, then you'd see a bigger jump.
So, um, HML, bigger jump. Uh, I'm just
zoomed in for the purposes of this
tutorial, but that one's kind of
interesting. The jump list is the next
one, which is extremely useful. So,
basically, the jump list just keeps
track of all your movements. Um, and you
can traverse it with these two commands.
Ctrl I and control O. So, let's say I
open another file. I'm going to zoom in
a little
more. Uh, let's open up this lib file.
And if I want to go back, instead of
using telescope or like a file explorer
to go back, you can just hit control O
and that'll take you back to your
previous jump. And then control I will
take you forward. Um, so for another
example, I'll go to the top of this
file. I can go control O control O to go
back in this traverse order. Um, and
then control I to go back to the
original. Super super useful if you want
to go somewhere and then go right back.
I didn't know about this for the longest
time and when I figured it out, it's a
huge game changer cuz you can kind of
just like spam these two to go like back
and forth through all your jumps and and
just like look for the place that you're
that you're looking for if you're kind
of moving between two or three functions
or classes or files or something. just
an awesome gamechanging command. Um, the
next step is you can have visual and
then go to visual line. So maybe this is
an obvious one for a lot of people, but
let's say I'm in this function and I
want to delete the whole thing. V around
uh brackets and then if I want to select
that whole um body, I'm in visual mode,
I can I can type um capital V and
that'll go into visual line and select
the whole thing. Um, some people would
say here, uh, just use a tree setter
text object and and set it up so you can
view around function. If you don't know
what that is, um, it's this plugin that
lets you do it in. Personally, I'm kind
of I don't know if this is the correct
call, but I'm a little bit against
extending the default key bindings of
Vim just because when I have like a
vanilla config cuz I'm sshing into a
server or something, I don't want to be
super reliant on things like that. Like
I'm fine with plugins, but if you're
changing the fundamental key behavior of
him, I think that's like a little bit
too far. Not to say there's like not
huge productivity gains to be made
there, but um personally I don't really
like that. Um all right, next up, you
can move to the two different sides of
selection. So if I select this whole
block, V around block, um typing O will
take your cursor to the the ends. You
can see it's jumping back and forth
there. This is often useful on a bigger
thing. So, if I select around this, it
takes me to the two visual sides of it.
That's pretty
nice. Um, if you want to see like the
other side of of something. Another one
I use from time to time is GV, which
takes you to the last visual selection.
GV. It'll just reselect what you had
previously selected. That's kind of
nice. Uh, don't use it super often
because I often forget about it and I'll
just resort to simpler movements. But,
if you can remember it, it's a solid
one. GI will take you to the previous
insert. So if I type up here
um and then go to the bottom and I can
go GI and it'll take me back there and
put me in insert mode. That's pretty
solid. Prefixing insert mode with a
number is I thought kind of useless at
first, but it's actually I find I use it
at least for example things like more
often than you would think. for testing
a macro or something. I want the line
test 500 times like um 500 I test enter
escape. And then we have a cool little
alternating thing going on here.

